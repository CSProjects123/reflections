What happens when you initialize a
repository? Why do you need to do it?

you initialize a repo when you want to
create a new git repo. It adds a .git 
file to ` repo.




How is the staging area different from
the working directory and the repository?
What value do you think it offers?

The repository contains everything. 
The working directory is the directory
with the lastest files. The staging 
area is a place where you can move files, 
before finally commiting them all at once. 





How can you use the staging area to make
sure you have one commit per logical change?

I'm not sure on this. After each change, I can 
add the file to the staging area. So I suppose I
have multiple changes on the staging area. Then, 
When I commit, all of these will be transferred \
in one commit right? I think so. So what is the 
point? I'm a bit fuzzy on this. 






What are some situations when branches
would be helpful in keeping your history 
organized? How would branches help?

When you want to introduce an experimental
feature, you can use a branch to do this. 
Or if you want to target content, then braching 
could be very helpful. 





How do the diagrams help you visualize
the branch structure?

Diagrams help in visualizing the brach
structure by providing a pictoral tree-
like structure where you can clearly see 
the parent of each commit. You can also
see all of the branches that exist and 
thus you get a better understanding of
the different directions in which the 
project is developing. Note: you can use 
the shortcut git -b new_branch_name which
is equivalent to running "git branch 
new_bracnh_name" and then running git 
checkout on the new bracnh 





